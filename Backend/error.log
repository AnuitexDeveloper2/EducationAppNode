{
  message: '>>>> orderService.createOrder(), invalid data = instance additionalProperty "sortType" exists in instance when not allowed,instance additionalProperty "searchString" exists in instance when not allowed,instance additionalProperty "pageNumber" exists in instance when not allowed,instance additionalProperty "pageSize" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:41:54.634Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:42:05.785Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:43:06.501Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "payment_info"',
  level: 'error',
  timestamp: '2020-02-19T16:00:34.792Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:29:31.020Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:30:03.232Z'
}
{
  message: '>>>> printingEditionService.getById(), invalid data = instance additionalProperty "id" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-20T08:31:19.832Z'
}
{
  message: '>>>> userService.edit(), invalid data = instance additionalProperty "passwordHash" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-20T16:52:17.909Z'
}
{
  message: `>>>> userService.getById(), result = Cast to ObjectId failed for value "{ _id: '5ec19a004abf333fc8a2668' }" at path "_id" for model "User"`,
  level: 'error',
  timestamp: '2020-02-21T08:21:50.854Z'
}
{
  message: '>>>> userService.getById(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T08:38:50.794Z'
}
{
  message: '>>>> authService.register(), result = undefined',
  level: 'error',
  timestamp: '2020-02-21T09:13:56.625Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:20:19.723Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:21:27.864Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:22:44.284Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:25:42.538Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:27:49.848Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:30:14.212Z'
}
{
  message: '>>>> userService.remove(), invalid data = function toString() { [native code] }',
  level: 'error',
  timestamp: '2020-02-21T09:30:38.196Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":"5e3c19a004abf333f8a2668"}',
  level: 'error',
  timestamp: '2020-02-21T09:33:30.927Z'
}
{
  message: '>>>> userService.changePassword(), invalid data = {"_id":"5e4ba967c18d4f204cb8ea35","oldPassword":"25012005","newPassword":"29041988"}',
  level: 'error',
  timestamp: '2020-02-21T11:00:47.047Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:03:02.309Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:18:09.634Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:19:08.581Z'
}
{
  message: '>>>> userService.changePassword(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:20:14.400Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:38:33.640Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:39:12.056Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:41:09.091Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:42:04.396Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:45:47.860Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:48:17.118Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:51:34.254Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:54:28.695Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:55:46.172Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.avatar does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-02-24T09:31:38.108Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-24T09:36:37.827Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:53:43.640Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:54:00.463Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:55:55.438Z'
}
