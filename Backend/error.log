{
  message: '>>>> orderService.createOrder(), invalid data = instance additionalProperty "sortType" exists in instance when not allowed,instance additionalProperty "searchString" exists in instance when not allowed,instance additionalProperty "pageNumber" exists in instance when not allowed,instance additionalProperty "pageSize" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:41:54.634Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:42:05.785Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:43:06.501Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "payment_info"',
  level: 'error',
  timestamp: '2020-02-19T16:00:34.792Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:29:31.020Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:30:03.232Z'
}
{
  message: '>>>> printingEditionService.getById(), invalid data = instance additionalProperty "id" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-20T08:31:19.832Z'
}
{
  message: '>>>> userService.edit(), invalid data = instance additionalProperty "passwordHash" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-20T16:52:17.909Z'
}
{
  message: `>>>> userService.getById(), result = Cast to ObjectId failed for value "{ _id: '5ec19a004abf333fc8a2668' }" at path "_id" for model "User"`,
  level: 'error',
  timestamp: '2020-02-21T08:21:50.854Z'
}
{
  message: '>>>> userService.getById(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T08:38:50.794Z'
}
{
  message: '>>>> authService.register(), result = undefined',
  level: 'error',
  timestamp: '2020-02-21T09:13:56.625Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:20:19.723Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:21:27.864Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:22:44.284Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:25:42.538Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:27:49.848Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:30:14.212Z'
}
{
  message: '>>>> userService.remove(), invalid data = function toString() { [native code] }',
  level: 'error',
  timestamp: '2020-02-21T09:30:38.196Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":"5e3c19a004abf333f8a2668"}',
  level: 'error',
  timestamp: '2020-02-21T09:33:30.927Z'
}
{
  message: '>>>> userService.changePassword(), invalid data = {"_id":"5e4ba967c18d4f204cb8ea35","oldPassword":"25012005","newPassword":"29041988"}',
  level: 'error',
  timestamp: '2020-02-21T11:00:47.047Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:03:02.309Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:18:09.634Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:19:08.581Z'
}
{
  message: '>>>> userService.changePassword(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:20:14.400Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:38:33.640Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:39:12.056Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:41:09.091Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:42:04.396Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:45:47.860Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:48:17.118Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:51:34.254Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:54:28.695Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:55:46.172Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.avatar does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-02-24T09:31:38.108Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-24T09:36:37.827Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:53:43.640Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:54:00.463Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:55:55.438Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-25T11:03:35.308Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:04:48.552Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:06:32.378Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance additionalProperty "email" exists in instance when not allowed,instance additionalProperty "password" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:10:26.118Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4,instance additionalProperty "password" exists in instance when not allowed,instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T11:13:36.229Z'
}
{
  message: '>>>> authService.register(), invalid data = instance additionalProperty "password" exists in instance when not allowed,instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T11:14:04.769Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.firstName does not meet minimum length of 4,instance requires property "email",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T12:01:32.513Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.avatar does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-02-26T12:27:09.839Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email [object Object] has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:41:42.386Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email [object Object] has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:42:25.415Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email {"email":"paderorner2019@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:43:08.668Z'
}
{
  message: '>>>> authService.confirmEmail(), error  {"email":"paderorner2019@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:43:56.676Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "email" exists in instance when not allowed,instance additionalProperty "passwordHash" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-28T11:03:26.641Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance.author_ids is not of a type(s) string',
  level: 'error',
  timestamp: '2020-02-28T13:28:38.051Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:02:40.418Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:15:48.516Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:17:34.198Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:21:31.572Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:22:40.445Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:14.404Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:15.117Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:52.875Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:26:17.654Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:26:51.150Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:27:57.541Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:28:48.233Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:30:29.477Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:31:17.200Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:32:47.748Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:36:58.937Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:14.697Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:22.112Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:30.227Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:45.978Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:54.592Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:39:21.234Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:49:30.371Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:00:13.466Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:10:24.293Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:10:47.668Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:12:47.643Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:13:36.504Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:16:30.125Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T16:11:32.556Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-02-28T16:56:48.129Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-04T14:45:54.287Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-05T09:05:34.985Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-03-05T09:49:02.470Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-05T10:00:39.572Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:06:28.268Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:06:33.676Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:07:22.197Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:08:57.244Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:08:57.835Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:09:05.276Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:09:56.866Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:22:25.258Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:23.028Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:26.431Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:26.776Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.000Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.175Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.341Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.509Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.670Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:27.853Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:28.014Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:23:57.881Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T10:25:54.875Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance.email does not meet minimum length of 4,instance.passwordHash does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-05T11:10:11.099Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T11:34:58.421Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T11:35:24.838Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-05T11:57:41.552Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance.email does not meet minimum length of 4,instance.passwordHash does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-05T12:22:24.012Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance.email does not meet minimum length of 4,instance.passwordHash does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-05T12:22:25.475Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance.email does not meet minimum length of 4,instance.passwordHash does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-05T12:22:27.114Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance.email does not meet minimum length of 4,instance.passwordHash does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-05T12:22:29.200Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:02:23.657Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:34:07.384Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:37:01.162Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:39:01.716Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:40:09.814Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:41:29.488Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:42:07.217Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:42:51.364Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:44:10.574Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T08:45:29.721Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T08:50:44.998Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T09:03:54.347Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T11:10:14.601Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance additionalProperty "password" exists in instance when not allowed,instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-10T11:30:40.730Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T12:55:26.374Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T14:45:17.142Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T14:46:23.895Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T14:46:26.476Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-10T15:12:09.655Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-10T15:13:41.306Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T15:14:45.800Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-10T15:14:58.819Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-03-11T08:37:08.034Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-03-11T08:37:31.889Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-03-11T08:38:20.074Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-03-11T08:39:24.744Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T10:21:52.152Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T10:22:20.529Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T10:36:06.611Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T10:49:43.111Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:09:26.390Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:09:44.540Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:38:57.419Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:39:56.592Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:41:12.980Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:44:33.938Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:47:10.709Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:48:19.810Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:48:51.648Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:49:07.973Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:56:54.370Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email",instance requires property "password"',
  level: 'error',
  timestamp: '2020-03-11T11:58:12.174Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T12:25:58.346Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T12:26:40.256Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:15:24.881Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:16:47.716Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:17:36.686Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:18:22.049Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:19:35.263Z'
}
{
  message: '>>>> authService.logIn(), invalid data = instance requires property "email"',
  level: 'error',
  timestamp: '2020-03-11T13:19:44.509Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-11T16:08:21.749Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-03-12T08:30:21.816Z'
}
{
  message: '>>>> authService.confirmEmail(), error  {"email":"vasilets.seven@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-03-12T14:55:59.159Z'
}
{
  message: '>>>> authService.confirmEmail(), error  {"email":"vasilets.seven@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-03-12T14:57:17.767Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-13T14:45:42.529Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-13T14:56:30.361Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-17T10:45:28.314Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-17T10:53:57.120Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-03-17T11:31:33.972Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T11:52:28.734Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T11:52:29.232Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T11:52:29.569Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T11:52:30.003Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.userName does not meet minimum length of 4,instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T12:40:49.503Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.email does not meet minimum length of 4,instance.firstName does not meet minimum length of 4,instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-17T13:44:51.222Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "searchString" exists in instance when not allowed,instance additionalProperty "sortType" exists in instance when not allowed,instance additionalProperty "pageNumber" exists in instance when not allowed,instance additionalProperty "pageSize" exists in instance when not allowed,instance additionalProperty "sortTable" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-04-06T18:09:45.316Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance requires property "name"',
  level: 'error',
  timestamp: '2020-04-06T18:09:51.585Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.product_ids is not of a type(s) string,instance additionalProperty "id" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-04-08T09:03:14.471Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.product_ids is not of a type(s) string,instance additionalProperty "id" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-04-08T12:15:32.205Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.product_ids is not of a type(s) string',
  level: 'error',
  timestamp: '2020-04-08T12:17:10.745Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.product_ids is not of a type(s) array',
  level: 'error',
  timestamp: '2020-04-08T12:18:48.364Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:30:51.506Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:33:45.822Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:35:10.847Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:35:29.766Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:35:35.692Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T12:40:44.057Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance.name does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-08T17:02:12.228Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-04-09T19:08:04.950Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-04-09T19:18:52.842Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-04-09T19:21:44.179Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance._id is not of a type(s) string',
  level: 'error',
  timestamp: '2020-04-10T14:12:52.224Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance requires property "name"',
  level: 'error',
  timestamp: '2020-04-10T14:38:25.289Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T17:46:33.685Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T17:48:16.809Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T17:51:24.876Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T17:52:06.032Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:00:43.155Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:11:05.214Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:12:16.013Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:12:52.275Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:13:45.928Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:16:52.995Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:17:40.652Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:17:49.287Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:18:14.942Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance additionalProperty "5e9085496cf4b00f7c9aad5f" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:19:52.201Z'
}
{
  message: '>>>> authorService.remove(), invalid data = instance additionalProperty "data" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-04-10T18:20:36.983Z'
}
{
  message: '>>>> authorService.create(), result = false',
  level: 'error',
  timestamp: '2020-04-14T17:08:02.601Z'
}
{
  message: '>>>> authorService.create(), result = false',
  level: 'error',
  timestamp: '2020-04-14T17:08:42.676Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance requires property "ProductType"',
  level: 'error',
  timestamp: '2020-04-14T19:13:10.618Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance.price is not of a type(s) number,instance requires property "ProductType"',
  level: 'error',
  timestamp: '2020-04-14T19:14:59.569Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance requires property "ProductType"',
  level: 'error',
  timestamp: '2020-04-14T19:17:35.479Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance requires property "ProductType"',
  level: 'error',
  timestamp: '2020-04-14T19:21:23.380Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance requires property "ProductType"',
  level: 'error',
  timestamp: '2020-04-14T19:23:34.269Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance.price is not of a type(s) number',
  level: 'error',
  timestamp: '2020-04-14T19:46:40.581Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance.price is not of a type(s) number',
  level: 'error',
  timestamp: '2020-04-14T19:50:08.558Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-04-15T11:55:22.311Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-04-15T14:54:45.643Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{}}}',
  level: 'error',
  timestamp: '2020-04-15T17:28:54.878Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{}}}',
  level: 'error',
  timestamp: '2020-04-15T17:30:51.095Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{"id":"5e9719247682931298f0a1c2","name":"CanadienHokkeist"}}}',
  level: 'error',
  timestamp: '2020-04-15T17:31:07.094Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{"id":"5e9719807682931298f0a1c3","name":"NewUser"}}}',
  level: 'error',
  timestamp: '2020-04-15T17:31:12.260Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{"id":"5e971ce07682931298f0a1c5","name":"Dwarf"}}}',
  level: 'error',
  timestamp: '2020-04-15T17:31:13.380Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{"id":"5e9719807682931298f0a1c3","name":"NewUser"}}}',
  level: 'error',
  timestamp: '2020-04-15T17:31:45.430Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"item":{"id":"5e9719247682931298f0a1c2","name":"CanadienHokkeist"}}}',
  level: 'error',
  timestamp: '2020-04-15T17:36:02.383Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"dispatchConfig":null,"_targetInst":null,"nativeEvent":null,"type":null,"target":null,"eventPhase":null,"bubbles":null,"cancelable":null,"defaultPrevented":null,"isTrusted":null,"view":null,"detail":null,"screenX":null,"screenY":null,"clientX":null,"clientY":null,"pageX":null,"pageY":null,"ctrlKey":null,"shiftKey":null,"altKey":null,"metaKey":null,"button":null,"buttons":null,"_dispatchListeners":null,"_dispatchInstances":null}}',
  level: 'error',
  timestamp: '2020-04-15T17:37:14.512Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"dispatchConfig":null,"_targetInst":null,"nativeEvent":null,"type":null,"target":null,"eventPhase":null,"bubbles":null,"cancelable":null,"defaultPrevented":null,"isTrusted":null,"view":null,"detail":null,"screenX":null,"screenY":null,"clientX":null,"clientY":null,"pageX":null,"pageY":null,"ctrlKey":null,"shiftKey":null,"altKey":null,"metaKey":null,"button":null,"buttons":null,"_dispatchListeners":null,"_dispatchInstances":null}}',
  level: 'error',
  timestamp: '2020-04-15T17:38:55.707Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"dispatchConfig":null,"_targetInst":null,"nativeEvent":null,"type":null,"target":null,"eventPhase":null,"bubbles":null,"cancelable":null,"defaultPrevented":null,"isTrusted":null,"view":null,"detail":null,"screenX":null,"screenY":null,"clientX":null,"clientY":null,"pageX":null,"pageY":null,"ctrlKey":null,"shiftKey":null,"altKey":null,"metaKey":null,"button":null,"buttons":null,"_dispatchListeners":null,"_dispatchInstances":null}}',
  level: 'error',
  timestamp: '2020-04-15T17:42:48.018Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":{"dispatchConfig":null,"_targetInst":null,"nativeEvent":null,"type":null,"target":null,"eventPhase":null,"bubbles":null,"cancelable":null,"defaultPrevented":null,"isTrusted":null,"view":null,"detail":null,"screenX":null,"screenY":null,"clientX":null,"clientY":null,"pageX":null,"pageY":null,"ctrlKey":null,"shiftKey":null,"altKey":null,"metaKey":null,"button":null,"buttons":null,"_dispatchListeners":null,"_dispatchInstances":null}}',
  level: 'error',
  timestamp: '2020-04-15T17:43:10.440Z'
}
{
  message: '>>>> userService.remove(), invalid data = {}',
  level: 'error',
  timestamp: '2020-04-15T17:46:15.216Z'
}
{
  message: '>>>> userService.blockUser(), invalid data = {}',
  level: 'error',
  timestamp: '2020-04-15T17:50:44.599Z'
}
{
  message: '>>>> userService.blockUser(), invalid data = {}',
  level: 'error',
  timestamp: '2020-04-15T18:43:37.444Z'
}
{
  message: '>>>> userService.blockUser(), invalid data = {}',
  level: 'error',
  timestamp: '2020-04-15T18:51:26.786Z'
}
{
  message: '>>>> userService.blockUser(), invalid data = {}',
  level: 'error',
  timestamp: '2020-04-15T18:51:30.217Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-04-18T14:44:10.324Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-04-18T18:27:59.152Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-04-19T15:05:32.302Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-04-19T15:07:06.609Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-04-19T15:08:19.685Z'
}
