{
  message: '>>>> orderService.createOrder(), invalid data = instance additionalProperty "sortType" exists in instance when not allowed,instance additionalProperty "searchString" exists in instance when not allowed,instance additionalProperty "pageNumber" exists in instance when not allowed,instance additionalProperty "pageSize" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:41:54.634Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:42:05.785Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-19T15:43:06.501Z'
}
{
  message: '>>>> orderService.createOrder(), invalid data = instance requires property "payment_info"',
  level: 'error',
  timestamp: '2020-02-19T16:00:34.792Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:29:31.020Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-20T08:30:03.232Z'
}
{
  message: '>>>> printingEditionService.getById(), invalid data = instance additionalProperty "id" exists in instance when not allowed,instance requires property "_id"',
  level: 'error',
  timestamp: '2020-02-20T08:31:19.832Z'
}
{
  message: '>>>> userService.edit(), invalid data = instance additionalProperty "passwordHash" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-20T16:52:17.909Z'
}
{
  message: `>>>> userService.getById(), result = Cast to ObjectId failed for value "{ _id: '5ec19a004abf333fc8a2668' }" at path "_id" for model "User"`,
  level: 'error',
  timestamp: '2020-02-21T08:21:50.854Z'
}
{
  message: '>>>> userService.getById(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T08:38:50.794Z'
}
{
  message: '>>>> authService.register(), result = undefined',
  level: 'error',
  timestamp: '2020-02-21T09:13:56.625Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:20:19.723Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:21:27.864Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:22:44.284Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:25:42.538Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:27:49.848Z'
}
{
  message: '>>>> userService.remove(), invalid data = [object Object]',
  level: 'error',
  timestamp: '2020-02-21T09:30:14.212Z'
}
{
  message: '>>>> userService.remove(), invalid data = function toString() { [native code] }',
  level: 'error',
  timestamp: '2020-02-21T09:30:38.196Z'
}
{
  message: '>>>> userService.remove(), invalid data = {"_id":"5e3c19a004abf333f8a2668"}',
  level: 'error',
  timestamp: '2020-02-21T09:33:30.927Z'
}
{
  message: '>>>> userService.changePassword(), invalid data = {"_id":"5e4ba967c18d4f204cb8ea35","oldPassword":"25012005","newPassword":"29041988"}',
  level: 'error',
  timestamp: '2020-02-21T11:00:47.047Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:03:02.309Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:18:09.634Z'
}
{
  message: '>>>> authService.logIn(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:19:08.581Z'
}
{
  message: '>>>> userService.changePassword(), result = invalid password',
  level: 'error',
  timestamp: '2020-02-21T11:20:14.400Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:38:33.640Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:39:12.056Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:41:09.091Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:42:04.396Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:45:47.860Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:48:17.118Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-21T11:51:34.254Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:54:28.695Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-24T08:55:46.172Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.avatar does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-02-24T09:31:38.108Z'
}
{
  message: '>>>> userService.getById(), invalid data = {}',
  level: 'error',
  timestamp: '2020-02-24T09:36:37.827Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:53:43.640Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:54:00.463Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-24T13:55:55.438Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "stock" exists in instance when not allowed,instance additionalProperty "price" exists in instance when not allowed',
  level: 'error',
  timestamp: '2020-02-25T11:03:35.308Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:04:48.552Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:06:32.378Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "userName" exists in instance when not allowed,instance additionalProperty "firstName" exists in instance when not allowed,instance additionalProperty "lastName" exists in instance when not allowed,instance additionalProperty "email" exists in instance when not allowed,instance additionalProperty "password" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-25T11:10:26.118Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.lastName does not meet minimum length of 4,instance additionalProperty "password" exists in instance when not allowed,instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T11:13:36.229Z'
}
{
  message: '>>>> authService.register(), invalid data = instance additionalProperty "password" exists in instance when not allowed,instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T11:14:04.769Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.firstName does not meet minimum length of 4,instance requires property "email",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-02-25T12:01:32.513Z'
}
{
  message: '>>>> authService.register(), invalid data = instance.avatar does not meet minimum length of 4',
  level: 'error',
  timestamp: '2020-02-26T12:27:09.839Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email [object Object] has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:41:42.386Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email [object Object] has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:42:25.415Z'
}
{
  message: '>>>> authService.confirmEmail(), error = email {"email":"paderorner2019@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:43:08.668Z'
}
{
  message: '>>>> authService.confirmEmail(), error  {"email":"paderorner2019@gmail.com"} has not been assigned to any user ',
  level: 'error',
  timestamp: '2020-02-28T10:43:56.676Z'
}
{
  message: '>>>> authorService.create(), invalid data = instance additionalProperty "email" exists in instance when not allowed,instance additionalProperty "passwordHash" exists in instance when not allowed,instance requires property "name"',
  level: 'error',
  timestamp: '2020-02-28T11:03:26.641Z'
}
{
  message: '>>>> printingEditionService.update(), invalid data = instance.author_ids is not of a type(s) string',
  level: 'error',
  timestamp: '2020-02-28T13:28:38.051Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:02:40.418Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:15:48.516Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:17:34.198Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:21:31.572Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:22:40.445Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:14.404Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:15.117Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:23:52.875Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:26:17.654Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:26:51.150Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:27:57.541Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:28:48.233Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:30:29.477Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:31:17.200Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:32:47.748Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:36:58.937Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:14.697Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:22.112Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:30.227Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:45.978Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:38:54.592Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:39:21.234Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T14:49:30.371Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:00:13.466Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:10:24.293Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:10:47.668Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:12:47.643Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:13:36.504Z'
}
{
  message: '>>>> printingEditionService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T15:16:30.125Z'
}
{
  message: '>>>> authorService.update(), result = false',
  level: 'error',
  timestamp: '2020-02-28T16:11:32.556Z'
}
{
  message: '>>>> authService.logIn(), result = user is not found',
  level: 'error',
  timestamp: '2020-02-28T16:56:48.129Z'
}
{
  message: '>>>> authService.register(), invalid data = instance requires property "userName",instance requires property "email",instance requires property "firstName",instance requires property "lastName",instance requires property "passwordHash"',
  level: 'error',
  timestamp: '2020-03-04T14:45:54.287Z'
}
